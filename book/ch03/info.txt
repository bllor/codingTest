---------------
얕은복사 : 리스트 안의 모든 원소가 참조하는 곳까지 복사
깊은복사 : 리스트 안의 구성 원소 수준으로 복사

얕은복사를 할 경우, 참조하는 리스트가 변경되면 같이 값이 변경되지만
깊은 복사는 그렇지 않다.

검색 알고리즘의 종류
1)선형 검색 : 무작위로 늘어놓은 데이터 집합에서 검색을 수행
2)이진 검색 : 일정한 규칙으로 늘어놓은 데이터 집합에서 검색
3)해시법: 추가 삭제가 자주 일어나는 데이터 집합에서 검색

선형검색 : 직선모양(선형)으로 늘어선 배열에서 검색하는 경우에 원하는 키값을 가진 원소를 찾을 때까지 맨 앞에서 스캔하여 순서대로 검색하는 알고리즘
선형검색의 종료조건은 1.원하는 원소를 찾을 경우, 2.모든 배열을 다 검색한 경우
선형검색은 원소의 값이 정렬되지 않은 배열에서 검색할 때 사용하는 유일한 방법
선형검색은 종료조건 검사하는 비용이 포함되어있는데, 이 비용을 줄이기 위해 보초법을 사용할 수 있다.

x=[1,2,3,4,5]
key=5
i=0
while True:
    if i == len(x):
        break
    
    if x[i]==key:
        return i
    else:
        i+=1
보초법은 리스트의 마지막에 찾으려는 값을 넣어, 종료조건 검사비용을 줄이는데 사용한다.

이진검색 : 원소가 오름차순이나 내림차순으로 정렬된 배열에서 사용하는 알고리즘

해시법 : 데이터를 저장할 위치 =인덱스 를 간단한 연산으로 구하는 것
-->원소의 검색 뿐만 아니라 추가,삭제도 효율적으로 수행할 수 있다.
해시함수: 키ㄹ 해시값으로 변환하는 과정
해시값: 배열의 키를 원소의 개수로 나눈 값
버킷: 해시테이블에서 만들어진 원소

버킷이 충돌하는 경우가 있는데 해결하는 방법
1)체인법(오픈해시법): 해시값이 같은 원소를 연결리스트로 관리
2)오픈주소법: 빈 버킷을 찾을 때까지 해시를 반복

1.체인법
체인법에서는 해시값이 같은 데이터를 연결 리스트에 의해 체인 모양으로 연결한다.
배열의 각 버킷을 저장하는 것은 인덱스를 해시값으로 하는 연결리스트의 앞쪽노드를 참조한다.

