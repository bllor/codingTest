프로그램: 컴퓨터에게 일을 하라고 지시하는 명령의 모음
알고리즘: 문제해결 순서
자료구조: 컴퓨터에 정보를 효율적으로 저장하고 관리하는 방법
효율적인 자료구조를 선택하면 알고리즘의 성능도 향상된다.

선택구조: 조건식으로 평가한 결과에 따라 프로그램의 실행 흐름이 변경되는 구조.

if나 while문 등 복합문의 첫부분을 헤더라고 하고, : 뒤의 부분을 스위트로 실행문을 의미한다.


산술연산자: +나 -등의 기호
피연산자: 연산대상
a+b에서 a,b가 피연산자라고 할 수 있다.

이터러블 객체: 반복될 수 있는 객체
range(n):0~n까지
range(a,b) :a~b-1까지
range(a,b,s):a~b까지 s간격으로 나열하는 수열


드모르간의 법칙 : 각 조건을 부정하고 논리곱을 논리합으로, 논리합을 논리곱으로 바꾸고 다시 전체를 부정하면 원래의 조건과 같다

구조적 프로그래밍:
입력과 출력으로 이루어진 구정 요소를 계층으로 배치하여 프로그램을 구성하는 방법
구조적 프로그래밍은 순차, 선택, 반복이라는 세 종류의 제어 흐름을 사용한다.


------------------------------------------------------------------------------
1.배열 : 묶음 단위로 값을 지정하는 자료구조
배열에 저장되는 객체 하나하나를 원소라고 하고, 0,1,2... 순으로 인덱스를 부여 받는다.
배열의 종류
[1]리스트
(1)정의 : 원소를 변경할 수 있는 뮤터블 list형 객체
- 연산자 [] 안에 원소를 쉼표로 구분하여 표기하여 생성할 수 있다.
- 파이썬 내장함수 List()를 사용하여 만들 수 있다.

[2]튜플
(1)정의 : 원소에 순서를 메겨 결합한 것으로 원소를 변경할 수 없는 이뮤터블 객체이다.
- 연산자 ()안에 원소를 쉼표로 구분하여 표기하여 생성할 수 있다.
- 파이썬 내장함수 tuple()를 사용해서도 만들 수 있다.
*
연산자만을 이용하여 튜플을 만들 때,
원소의 개수가 1개인 경우 원소의 뒤에 ,를 붙혀주어야 튜플이 된다.
왜냐하면 쉼표가 없을 경우 단순변수라고 생각하기 때문이다.

2.슬라이스
리스트 또는 튜플의 원소 일부를 연속해서 또는 일정한 간격으로 꺼내 새로운 리스트 또는 튜플을 만드는 것

s=[11,22,33,44,55,66,77]
s[i,j] = i번부터  j-1번까지 
s[i,j,k]= i번부터 j-1번까지 k간격으로

s[0,2] = [11,22]
s[0,6,2] = [11,33,55]

*
i,j,k 규칙
i,j가 len(s)보다 클 경우 len(s)가 지정된 것으로 간주한다.
i가 없거나 none인 경우 0으로 간주한다.
j가 없거나 None인 경우 len(s)로 간주한다.

