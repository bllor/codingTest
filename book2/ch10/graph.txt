그래프란 노드와 노드 사이에 연결된 간선의 정보를 가지고 있는 자료구조이다.
그래프 자료구조 중 트리 자료구조는 다양한 알고리즘에서 사용되므로 꼭 기억하자.
트리 자료구조는 부모에서 자식으로 내려오는 계층적인 모델에 속한다.

그래프의 구현 방법은 2가지 방법이 존재한다.
- 인접행렬: 2차원 배열을 사용하는 방식
- 인접리스트: 리스트를 사용하는 방식

1.서로소 집합
수학에서 서로소집합이란 공통원소가 없는 두 집합을 의미한다.
서로소 집합자료구조란 서로조 부분 집합들로 나누어진 원소들의 데이터를 처리하기 위한 자료구조라고 할 수 있다.
서로소 집합 자료구조는 union과 find연산으로 조작할 수 있으며,
union은 2개의 원소가 포함된 집합을 하나로 합치는 연산이고,
find는 특정한 원소가 속한 집합이 어떤 집합인지 알려주는 연산이다.
[1]서로소 집합 자료구조
서로소 집합 정보가 주어졌을 때 트리 자료구조를 이용해서 집합을 표현하는 서로소 집합 알고리즘은 다음과 같다
1)union연산을 확인하여, 서로 연결된 두 노드 a,b를 확인한다
1-1)a와 b의 루트 노드를 각각 찾는다
1-2)루트노드 a를 루트노드 b의 부모노드로 설정한다(루트노드b가 루트노드a를 가리키도록 한다)
2)모든 union 연산을 처리할 때까지 1번 과정을 반복한다.
이 알고리즘에서 유의할 점은 union 연산을 효과적으로 수행하기 위해 '부모 테이블'을 항상 가지고 있어야 한다는 점이다.
서로소 집합으로 루트를 찾기 위해서는 재귀적으로 부모를 거슬러 올라가야 한다.


2.크루스칼 알고리즘
신장트리 중에서 최소 비용으로 만들 수 있는 신장트리를 찾는 알고리즘을 최소 신장 트리 알고리즘이라고 하며
대표적인 최소 신장 트리 알고리즘으로 크루스칼 알고리즘이 있다.
크루스칼 알고리즘은 그리디 알고리즘으로 분류된다.
알고리즘 순서
1.간선 데이터를 비용에 따라 오름차순으로 정렬한다
2.간선을 하나씩 확인하며 현재의 간선이 사이클을 발생시키는지 확인한다.
2-1.사이클이 발생하지 않는 경우 최소 신장 트리에 포함시킨다.
2-2.사이클이 발생하는 경우 최소 신장 트리에 포함시키지 않는다.
3.모든 간선에 대하여 2번의 과정을 반속한다.

최소신장트리는 일종의 트리자료구조이므로, 최종적으로 신장 트리에 포함되는 간선의 개수가 노드의 개수 -1 과 같다는 특징이 있다.
크루스칼 알고리즘은 간선의 개수가 E일 때, O(ElogE)의 시간 복잡도를 가진다.


3.위상정렬
방향 그래프의 모든 노드를 방향성에 거스르지 않도록 순서대로 나열하는 것
위상정렬 알고리즘을 알기 위상 정렬 알고리즘을 살펴보기 전에 먼저 진입차수에 대해 알아야 한다.
진입차수란 특정한 노드로 들어오는 간선의 개수를 의미한다.

위상정렬 알고리즘의 순서
1.진입차수가 0인 노드를 큐에 넣는다
2.큐가 빌 때까지 다음의 과정을 반복한다
2-1.큐에서 원소를 꺼내 해당 노드에서 출발하는 간선을 그래프에서 제거한다
2-2.새롭게 진입차수가 0이 된 노드를 큐에 넣는다.
모든 원소를 방문하기 전에 큐가 빈다면 사이클이 발생한 것이다.
기본적으로 위상정렬의 경우 사이클이 발생하지 않는다고 명시하는 경우가 더 많으므로, 사이클이 발생하지 않는 경우만 고려한다.



*알고리즘 문제를 접했을 때 서로 다른 개체가 연결되어있다고하면 가장 먼저 그래프 알고리즘을 떠올려야 한다.
