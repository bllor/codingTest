다이나믹 프로그래밍 : 큰 문제를 작게 나누고, 같은 문제라면 한 번씩만 풀어 문제를 효율적으로 해결하는 알고리즘 기법

다이나믹 프로그래밍의 전제조건
1.큰 문제를 작은 문제로 나눌 수 있다
2.작은 문제에서 구현한 정답은 그것을 포함하는 큰 문제에서도 동일하다

피보나치 수열은 다이나믹 프로그래밍의 대표문제이며 메모이제이션 기법을 사용하여 해결해보자
메모이제이션은 한 번 구한 결과를 메모리 공간에 메모해두고 같은 식을 다시 호출하면 메모한 결과를 그대로 가져오는 기법을 의미한다.
메모이제이션을 구현하는 방법은 한 번 구한 정보를 리스트에 저장하는 것이다.
다이나믹 프로그래밍을 재귀적으로 수행하다가 같은 정보가 필요할 때는 이미 구한 정답을 그대로 리스트에서 가져오면 된다.
저장용 리스트는 DP테이블이라고 부르며, 메모이제이션은 탑다운 방식에 국한되어 사용되는 표현이다.
메모이제이션은 자료형이나 dict자료형을 이용할 수도 있다.


*
탑다운 방식 : 큰문제를 해결하기 위해 작은 문제를 호출하는 방법(재귀함수 사용) (x~1까지 내려감)
바텀업 방식 : 작은 문제부터 차근차근 답을 도출하는 방법(반복문 사용)(1~x까지 올라감)
다이나믹 프로그래밍은 재귀함수보다 반복문일 때 더 성능이 좋다.
