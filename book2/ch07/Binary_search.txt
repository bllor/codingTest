1.이진탐색(binary_search)
배열 내부의 데이터가 정렬되어 있어야만 사용할 수 있는 알고리즘
찾으려는 데이터와 중간점의 위치에 있는 데이터를 반복적으로 비교해서 원하는 데이터를 찾는게 이진 탐색 과정이다.
시간복잡도는 O(logN)이다.
이진탐색을 구현하는 방법은 재귀함수를 이용하는 방법과 단순하게 반복문을 이용하는 방법이 있다.
이진탐색은 코딩 테스트에서 단골로 나오는 문제이니 가급적 외울 수 있도록 하자!
탐색 범위가 2,000만이 넘어가는 경우 이진 탐색으로 문제에 접근해보는 것이 좋다.

2.트리 자료구조
[1]트리 자료구조의 특징
-트리는 부모 노드와 자식 노드의 관계로 표현된다.
-트리의 최상단 노드를 루트 노드라고 한다
-트리의 최하단 노트를 단말 노드라고 한다
-트리에서 일부를 떼어내도 트리구조이며 이를 서브트리라고 한다
-트리는 파일 시스템과 같이 계층적이고 정렬된 데이터를 다루기에 적합하다

[2]이진 탐색 트리
트리 자료구조 중에서 가장 간단한 형태

이진탐색문제는 입력 데이터가 많거나, 탐색 범위가 매우 넓은 편이다.
데이터의 개수가 많은 문제에 input()함수를 사용하면 동작 속도가 느려 시간 초과로 오답 판정을 받을 수 있다.

이럴 땐 sys라이브러리를 사용하여 입력받는다.
input_data= sys.stdin,readline().rstrip()


*순차 탐색
리스트 안에 있는 특정한 데이터를 찾기 위해 앞에서부터 데이터를 하나씩 차례대로 확인하는 방법

