정렬 : 데이터를 특정한 기준에 따라서 순서대로 나열하는 것
정렬을 공부하면 알고리즘의 효율성을 쉽게 이해할 수 있다.

1.선택정렬
데이터가 무작위로 여러 개 있을 때, 이 중에서 가장 작은 데이터를 선택해 맨 앞에 있는 데이터와 바꾸고,
그다음 작은 데이터를 선택해 앞에서 두 번째 데이터와 바꾸는 과정
선택정렬의 시간복잡도는 O(N^2)이다.
직관적으로 이해하자면 소스코드 상으로 간단한 형태의 2중반복문이 사용되었다.

2.삽입정렬
데이터를 하나씩 확인하며, 각 데이터를 적절한 위치에 삽입하는 것
선택정렬에 비해 구현 난이도가 높은 편이지만 선택 정렬에 비해 실행 시간 측면에서 더 효율적인 알고리즘이다.
삽입정렬은 두 번째 데이터부터 시작한다. 왜냐하면 첫 번째 데이터는 그 자체로 정렬되어 있다고 판단하기 때문이다.
삽입정렬은 항상 오름차순을 유지하며 삽입될 데이터보다 작은 데이터를 만나면 그 위치에서 멈춘다.


3.퀵정렬
위의 정렬들 보다 더 많이 사용되는 알고리즘으로, 빠른 알고리즘이다.
퀵정렬과 병합정렬은 대부분의 프로그래밍 언어에서 정렬 라이브러리의 근간이 되는 알고리즘이다.
퀵 정렬은 기준을 설정한 다음 큰 수와 작은 수를 교환한 후 리스트를 반으로 나누는 방식으로 동작한다.
퀵 정렬에서는 큰 수와 작은 수를 교환할 때, 교환을 위한 기준인 피벗을 사용한다.
피벗 설정과 리스트 분할 방법에 따라 여러가지의 퀵정렬로 나뉘는데 이 책에서는 호어 분할 방법을 사용한다.

